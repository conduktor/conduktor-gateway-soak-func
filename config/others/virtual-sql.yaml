title: Virtual SQL
services:
  kafka1:
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  kafka2:
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  kafka3:
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  gateway1:
    docker:
      environment:
        GATEWAY_ADVERTISED_HOST: localhost
        GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
        GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
    properties:
      bootstrap.servers: localhost:6969,localhost:7969
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
gateway2:
  docker:
    environment:
      GATEWAY_ADVERTISED_HOST: localhost
      GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
      GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
    properties:
      bootstrap.servers: localhost:6969,localhost:7969
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId

actions:

  - type: CREATE_VIRTUAL_CLUSTERS
    gateway: gateway1
    names:
      - teamA

  - type: CREATE_TOPICS
    kafka: teamA
    kafkaConfig: teamA-sa.properties
    topics:
      - name: cars
        replicationFactor: 1
        partitions: 1

  - type: LIST_TOPICS
    kafka: teamA
    kafkaConfig: teamA-sa.properties
    assertExists:
      - cars

  - type: PRODUCE
    kafka: teamA
    kafkaConfig: teamA-sa.properties
    topic: cars
    messages:
      - value: '{"type":"Sports","price":75,"color":"blue"}'
      - value: '{"type":"SUV","price":55,"color":"red"}'

  - type: CONSUME
    kafka: teamA
    kafkaConfig: teamA-sa.properties
    topic: cars
    assertSize: 2
    assertions:
      - description: Confirm Sport
        value:
          operator: containsIgnoreCase
          expected: 'Sports'
      - description: Confirm SUV
        value:
          operator: containsIgnoreCase
          expected: 'SUV'

  - type: CREATE_TOPICS
    kafka: teamA
    kafkaConfig: teamA-sa.properties
    topics:
      - name: red-cars
        replicationFactor: 1
        partitions: 1

  - type: ADD_INTERCEPTORS
    gateway: gateway1
    interceptors:
      teamA:
        red-cars:
          "pluginClass": "io.conduktor.gateway.interceptor.VirtualSqlTopicPlugin"
          "priority": "100"
          "config": {
            "virtualTopic": "red-cars",
            "statement": "SELECT type, price as price FROM cars WHERE color = 'red'"
          }

  - type: LIST_INTERCEPTORS
    gateway: gateway1
    vcluster: teamA
    assertSize: 1
    assertNames:
      - red-cars

  - type: CONSUME
    kafka: teamA
    kafkaConfig: teamA-sa.properties
    topic: red-cars
    assertSize: 1
    assertions:
      - description: Confirm Sport is not there because it's not red
        value:
          operator: doesNotContainIgnoringCase
          expected: 'Sports'
      - description: Confirm SUV is there because it's red
        value:
          operator: containsIgnoreCase
          expected: 'SUV'

  - type: CONCLUSION
