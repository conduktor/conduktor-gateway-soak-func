title: ksqldb
services:
  kafka1:
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  kafka2:
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  kafka3:
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  gateway1:
    docker:
      image: ghcr.io/conduktor/conduktor-gateway-distro
      environment:
        GATEWAY_ADVERTISED_HOST: localhost
        GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
        GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
        GATEWAY_CLUSTER_ID: private
    properties:
      bootstrap.servers: localhost:6969,localhost:7969
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  gateway2:
    docker:
      image: ghcr.io/conduktor/conduktor-gateway-distro
      environment:
        GATEWAY_ADVERTISED_HOST: localhost
        GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
        GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
        GATEWAY_CLUSTER_ID: private
    properties:
      bootstrap.servers: localhost:6969,localhost:7969
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
actions:

  - type: CREATE_VIRTUAL_CLUSTERS
    gateway: gateway1
    names:
      - teamA

  - type: BASH
    showOutput: true
    script: |
      curl \
        --silent \
        --request POST 'localhost:8888/topicMappings/teamA/.*' \
        --user 'admin:conduktor' \
        --header 'Content-Type: application/json' \
        --data-raw '{
          "topicName": "concentrated",
          "isVirtual": true
        }'

  - type: BASH
    showOutput: true
    kafka: teamA
    script: |
      docker compose --profile ksqldb up -d --wait

  - type: LIST_TOPICS
    kafka: teamA
    assertExists:
      - _confluent-ksql-default__command_topic
      - default_ksql_processing_log

  - type: LIST_TOPICS
    kafka: kafka1
    assertExists:
      - concentrated
    assertDoesNotExist:
      - _confluent-ksql-default__command_topic
      - default_ksql_processing_log
