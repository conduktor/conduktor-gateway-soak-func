title: Crypto Shredding
services:
  kafka1:
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  kafka2:
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  kafka3:
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  gateway1:
    docker:
      environment:
        GATEWAY_ADVERTISED_HOST: localhost
        GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
        GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
    properties:
      bootstrap.servers: localhost:6969,localhost:7969
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  gateway2:
    docker:
      environment:
        GATEWAY_ADVERTISED_HOST: localhost
        GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
        GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
    properties:
      bootstrap.servers: localhost:6969,localhost:7969
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  vault:
    docker:
      image: hashicorp/vault
      hostname: vault
      container_name: vault
      ports:
        - "8200:8200"
      command: [
        "sh",
        "-c",
        "(while ! nc -z 127.0.0.1 8200; \
                  do \
                  sleep 1; \
                  echo 'waiting for vault service ...'; \
                  done; \
                  export VAULT_ADDR='http://0.0.0.0:8200';\
                  vault secrets enable transit; \
                  vault secrets enable -version=1 kv; \
                  vault secrets enable totp \
                  ) & vault server -dev -dev-listen-address=0.0.0.0:8200",
      ]
      environment:
        VAULT_ADDR: "http://0.0.0.0:8200"
        VAULT_DEV_ROOT_TOKEN_ID: "vault-plaintext-root-token"
      healthcheck:
        test: nc -zv 0.0.0.0 8200
        interval: 5s
        retries: 25
actions:

  - type: CREATE_VIRTUAL_CLUSTERS
    gateway: gateway1
    names:
      - teamA

  - type: CREATE_TOPICS
    kafka: teamA
    topics:
      - name: customers-shredding
        replicationFactor: 1
        partitions: 1

  - type: LIST_TOPICS
    kafka: teamA
    assertExists:
      - customers-shredding

  - type: ADD_INTERCEPTORS
    gateway: gateway1
    interceptors: {
      "teamA": {
        "crypto-shredding-encrypt": {
          "pluginClass": "io.conduktor.gateway.interceptor.EncryptPlugin",
          "priority": 100,
          "config": {
            "topic": "customers-shredding",
            "kmsConfig": {
              "vault": {
                "uri": "http://vault:8200",
                "token": "vault-plaintext-root-token",
                "version": 1
              }
            },
            "fields": [
              {
                "fieldName": "password",
                "keySecretId": "vault-kms://vault:8200/transit/keys/secret-for-{{record.value.name}}",
                "algorithm": {
                  "type": "AES_GCM",
                  "kms": "VAULT"
                }
              },
              {
                "fieldName": "visa",
                "keySecretId": "vault-kms://vault:8200/transit/keys/secret-for-{{record.value.name}}",
                "algorithm": {
                  "type": "AES_GCM",
                  "kms": "VAULT"
                }
              }
            ]
          }
        }
      }
    }

  - type: LIST_INTERCEPTORS
    gateway: gateway1
    vcluster: teamA
    assertSize: 1
    assertNames:
      - crypto-shredding-encrypt

  - type: PRODUCE
    kafka: teamA
    topic: customers-shredding
    messages:
      - value: '{"name":"tom","username":"tom@conduktor.io","password":"motorhead","visa":"#abc123","address":"Chancery lane, London"}'
      - value: '{"name":"florent","username":"florent@conduktor.io","password":"kitesurf","visa":"#888999XZ","address":"Dubai, UAE"}'

  - type: CONSUME
    kafka: teamA
    properties:
      group.id: customer-encryption
      auto.offset.reset: earliest
    topics:
      - customers-shredding
    assertSize: 2
    assertions:
      - description: Confirm password is encrypted for tom
        value:
          operator: doesNotContainIgnoringCase
          expected: 'motorhead'
      - description: Confirm visa is encrypted for tom
        value:
          operator: doesNotContainIgnoringCase
          expected: '#abc123'
      - description: Confirm password is encrypted for florent
        value:
          operator: doesNotContainIgnoringCase
          expected: 'kitesurf'
      - description: Confirm visa is encrypted for florent
        value:
          operator: doesNotContainIgnoringCase
          expected: '#888999XZ'

  - type: ADD_INTERCEPTORS
    gateway: gateway1
    interceptors: {
      "teamA": {
        "crypto-shredding-decrypt": {
          "pluginClass": "io.conduktor.gateway.interceptor.DecryptPlugin",
          "priority": 100,
          "config": {
            "topic": "customers-shredding",
            "kmsConfig": {
              "vault": {
                "uri": "http://vault:8200",
                "token": "vault-plaintext-root-token",
                "version": 1
              }
            }
          }
        }
      }
    }

  - type: LIST_INTERCEPTORS
    gateway: gateway1
    vcluster: teamA
    assertSize: 2
    assertNames:
      - crypto-shredding-encrypt
      - crypto-shredding-decrypt

  - type: CONSUME
    kafka: teamA
    properties:
      group.id: customer-decryption
      auto.offset.reset: earliest
    topics:
      - customers-shredding
    assertSize: 2
    assertions:
      - description: Confirm password is decrypted for tom
        value:
          operator: containsIgnoreCase
          expected: 'motorhead'
      - description: Confirm visa is decrypted for tom
        value:
          operator: containsIgnoreCase
          expected: '#abc123'
      - description: Confirm password is decrypted for florent
        value:
          operator: containsIgnoreCase
          expected: 'kitesurf'
      - description: Confirm visa is decrypted for florent
        value:
          operator: containsIgnoreCase
          expected: '#888999XZ'

  - type: SH
    description: Listing created keys in Vault
    kafka: teamA
    showOutput: true
    script: |
      curl \
        --request GET 'http://localhost:8200/v1/transit/keys/?list=true' \
        --silent \
        --header "X-Vault-Token: vault-plaintext-root-token" | jq -r ".data.keys"

  - type: SH
    description: Remove florent related keys
    kafka: teamA
    showOutput: true
    script: |
      curl \
        --request POST 'http://localhost:8200/v1/transit/keys/secret-for-florent/config' \
        --silent \
        --header "X-Vault-Token: vault-plaintext-root-token" \
        --header "content-type: application/json" \
        --data-raw '{"min_decryption_version":"1","min_encryption_version":1,"deletion_allowed":true,"auto_rotate_period":0}' > /dev/null
     
      curl \
        --request DELETE http://localhost:8200/v1/transit/keys/secret-for-florent \
        --silent \
        --header "X-Vault-Token: vault-plaintext-root-token"

  - type: CONSUME
    kafka: teamA
    properties:
      group.id: customer-decryption-after-schredding
      auto.offset.reset: earliest
    topics:
      - customers-shredding
    assertSize: 2
    assertions:
      - description: Confirm password is decrypted for tom
        value:
          operator: containsIgnoreCase
          expected: 'motorhead'
      - description: Confirm visa is decrypted for tom
        value:
          operator: containsIgnoreCase
          expected: '#abc123'
      - description: Confirm password is encrypted for florent
        value:
          operator: doesNotContainIgnoringCase
          expected: 'kitesurf'
      - description: Confirm visa is encrypted for florent
        value:
          operator: doesNotContainIgnoringCase
          expected: '#888999XZ'

  - type: SUCCESS
    description: Done

