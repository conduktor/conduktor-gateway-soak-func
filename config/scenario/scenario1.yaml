title: Simple test with NONE authenticator type
docker:
  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    properties:
      bootstrap.servers: localhost:29092,localhost:29093
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  gateway:
    image: ghcr.io/conduktor/conduktor-gateway-distro
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9093
      GATEWAY_ADVERTISED_HOST: localhost
      GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
      GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
    properties:
      bootstrap.servers: localhost:6969
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
actions:
  - type: BASH
    script: echo 'hello'
    assertOutputContains:
      -  hello
    assertOutputDoesNotContain:
      -  blabla

  - type: SH
    script: >
      echo 'glou'; 
      exit 3;
    assertExitCode: 3
    assertOutputContains:
      -  glou
    assertOutputDoesNotContain:
      -  blabla

  - type: CREATE_VIRTUAL_CLUSTERS
    gateway: gateway
    names:
      - gateway
      - teamA

  - type: DESCRIBE_KAFKA_PROPERTIES
    kafka: teamA
    assertKeys:
      - bootstrap.servers

  - type: STEP
    description: Step1

  - type: DOCUMENTATION
    description: blabla

  - type: MARKDOWN
    markdown: |
      Run the full setup 

      ```bash
      docker compose up --wait --detach
      ```

      Run the demo

      ```sh
      ./run.sh
      ```

  - type: CREATE_TOPICS
    kafka: gateway
    topics:
      - name: encryptedTopic
        replicationFactor: 1
        partitions: 1

  - type: LIST_TOPICS
    kafka: gateway
    assertDoesNotExist:
      - blabla
    assertExists:
      - encryptedTopic

  - type: PRODUCE
    kafka: gateway
    topic: encryptedTopic
    messages:
      - value: 'hello world'

  - type: CONSUME
    kafka: gateway
    properties:
      group.id: bla
    topics:
      - encryptedTopic
    assertSize: 1
    assertions:
      - description: confirm hello is back
        value:
          operator: isEqualTo
          expected: 'hello world'
      - description: confirm blabla does not exists
        value:
          operator: isNotEqualTo
          expected: 'blabla'

  - type: DESCRIBE_TOPICS
    kafka: gateway
    topics:
      - encryptedTopic
    assertions:
      - name: encryptedTopic
        replicationFactor: 1
        partitions: 1

  - type: ADD_INTERCEPTORS
    gateway: gateway
    interceptors:
      clusterA:
        encryption-interceptor-config:
          pluginClass: "io.conduktor.gateway.interceptor.EncryptPlugin"
          "priority": 1
          "config": {
            "topic": "encryptedTopic",
            "schemaRegistryConfig": {
              "host": "http://schema-registry:8081"
            },
            "fields": [
              {
                "fieldName": "password",
                "keySecretId": "secret-key-password",
                "algorithm": {
                  "type": "AES_GCM",
                  "kms": "IN_MEMORY"
                }
              },
              {
                "fieldName": "visa",
                "keySecretId": "secret-key-visaNumber",
                "algorithm": {
                  "type": "AES_GCM",
                  "kms": "IN_MEMORY"
                }
              }
            ]
          }

  - type: LIST_INTERCEPTORS
    gateway: gateway
    vcluster: clusterA
    assertSize: 1
    assertNames:
      - encryption-interceptor-config

  - type: REMOVE_INTERCEPTORS
    gateway: gateway
    vcluster: clusterA
    names:
      - encryption-interceptor-config

  - type: LIST_INTERCEPTORS
    gateway: gateway
    vcluster: clusterA
    assertSize: 0
