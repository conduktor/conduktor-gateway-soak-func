title: ClusterSwitching
services:
  kafka1:
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  kafka2:
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  kafka3:
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    properties:
      bootstrap.servers: localhost:29092,localhost:29093,localhost:29094
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  backup-kafka-1:
    docker:
      hostname: backup-kafka-1
      container_name: backup-kafka-1
      image: confluentinc/cp-kafka:latest
      ports:
        - "39092:29092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2801/backup
        KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://backup-kafka-1:9092,EXTERNAL_SAME_HOST://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
        KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      depends_on:
        zookeeper:
          condition: service_healthy
      healthcheck:
        test: nc -zv backup-kafka-1 9092 || exit 1
        interval: 5s
        retries: 25
  backup-kafka-2:
    docker:
      hostname: backup-kafka-2
      container_name: backup-kafka-2
      image: confluentinc/cp-kafka:latest
      ports:
        - "39093:29093"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2801/backup
        KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29093,INTERNAL://:9093
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://backup-kafka-2:9093,EXTERNAL_SAME_HOST://localhost:29093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
        KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      depends_on:
        zookeeper:
          condition: service_healthy
      healthcheck:
        test: nc -zv backup-kafka-2 9093 || exit 1
        interval: 5s
        retries: 25
  backup-kafka-3:
    docker:
      hostname: backup-kafka-3
      container_name: backup-kafka-3
      image: confluentinc/cp-kafka:latest
      ports:
        - "39094:29094"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2801/backup
        KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29094,INTERNAL://:9094
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://backup-kafka-1:9094,EXTERNAL_SAME_HOST://localhost:29094
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
        KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      depends_on:
        zookeeper:
          condition: service_healthy
      healthcheck:
        test: nc -zv backup-kafka-3 9094 || exit 1
        interval: 5s
        retries: 25
  gateway1:
    docker:
      image: ghcr.io/conduktor/conduktor-gateway-distro:2.1.4
      environment:
        GATEWAY_ADVERTISED_HOST: localhost
        GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
        GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
        GATEWAY_CLUSTER_ID: private
        GATEWAY_BACKEND_KAFKA_SELECTOR: file://config/cluter-switching-clusters.yaml
    properties:
      bootstrap.servers: localhost:6969,localhost:7969
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
  gateway2:
    docker:
      image: ghcr.io/conduktor/conduktor-gateway-distro:2.1.4
      environment:
        GATEWAY_ADVERTISED_HOST: localhost
        GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
        GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
        GATEWAY_CLUSTER_ID: private
        GATEWAY_BACKEND_KAFKA_SELECTOR: file://config/cluter-switching-clusters.yaml
    properties:
      bootstrap.servers: localhost:6969,localhost:7969
      auto.offset.reset: earliest
      enable.auto.commit: false
      client.id: clientId
actions:

  - type: CREATE_TOPICS
    kafka: gateway1
    topics:
      - name: users
        replicationFactor: 1
        partitions: 1



  - type: SUCCESS
