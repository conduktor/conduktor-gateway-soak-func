version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -zv zookeeper 2181 || exit 1
      interval: 5s
      retries: 25

  kafka1:
    image: confluentinc/cp-kafka:${CP_VERSION}
    hostname: kafka1
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
    healthcheck:
      test: nc -zv kafka1 9092 || exit 1
      interval: 5s
      retries: 25

  kafka2:
    image: confluentinc/cp-kafka:${CP_VERSION}
    hostname: kafka2
    ports:
      - "29093:29093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29093,INTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9093,EXTERNAL_SAME_HOST://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
    healthcheck:
      test: nc -zv kafka2 9093 || exit 1
      interval: 5s
      retries: 25

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    depends_on:
      - kafka1
    ports:
      - "8081:8081"
    volumes:
      - type: bind
        source: "./config/clientConfig"
        target: /config/clientConfig
        read_only: true
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:9092
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: WARN
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID: schema-registry

  conduktor-gateway:
    image: conduktor/conduktor-proxy:${GATEWAY_VERSION}
    hostname: conduktor-gateway
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
    ports:
      - "6969:6969"
      - "6970:6970"
      - "9999:9999"
      - "8888:8888"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka1:9092, kafka2:9093
      SSL_KEY_PASSWORD: changeit
      SSL_KEY_STORE_PASSWORD: changeit
      SSL_KEY_TYPE: pkcs12
      USER_POOL_TYPE: JWT
      USER_POOL_SECRET_KEY: OaM4lG+xO5Gz10GB1apZ2XDUuWw/sK1H+XXcgExpYm2YEHgnvEf63q9TJraebD3SQb/JzefcZkUEKz/8V5V+Fg==
      PROXY_HOST: localhost
      SCHEMA_REGISTRY_HOST: http://schema-registry:8081
      INTERCEPTOR_CONFIG_LOCATION: "~"
      ADMIN_API_USERS: "[{username: admin, password: conduktor}]"
      JAVA_TOOL_OPTIONS: -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1
      DOWNSTREAM_THREAD: 10
#      AUTHENTICATION_AUTHENTICATOR_TYPE: NONE
#      SSL_KEY_STORE_PATH: ./config/tls/sasl-ssl/keystore.jks
#      SSL_KEY_STORE_PATH: ./config/tls/ssl/keystore.jks
    volumes:
      - type: bind
        source: "./config/tls"
        target: /config/tls
        read_only: true
    healthcheck:
      test: curl localhost:8888/health
      interval: 5s
      retries: 25
#
#  ksqldb-server:
#    image: confluentinc/cp-ksqldb-server:latest
#    hostname: ksqldb-server
#    container_name: ksqldb-server
#    depends_on:
#      - conduktor-gateway
#    ports:
#      - "8088:8088"
#    environment:
#      KSQL_LISTENERS: http://0.0.0.0:8088
#      KSQL_BOOTSTRAP_SERVERS: conduktor-gateway:6969
#      KSQL_HOST_NAME: ksqldb-server
#      KSQL_SECURITY_PROTOCOL: SASL_PLAINTEXT
#      KSQL_SASL_MECHANISM: PLAIN
#      KSQL_SASL_JAAS_CONFIG: |
#        org.apache.kafka.common.security.plain.PlainLoginModule \
#        required username="someTenant" \
#        password="eyJhbGciOiJIUzUxMiJ9.eyJ1c2VybmFtZSI6InByb3h5IiwidGVuYW50IjoicHJveHkiLCJleHAiOjE2OTY0MTA3MDh9.fWY9wImpYWqqc-oYN__An_6mbTmZko8sVeF8GEfTFXcpd1jNm09PYkqvOeh-N5411S_nDMmWjtRceYWNpeeY1A";
#
#  ksqldb-cli:
#    image: confluentinc/cp-ksqldb-cli:latest
#    container_name: ksqldb-cli
#    depends_on:
#      - ksqldb-server
#    entrypoint: /bin/sh
#    tty: true